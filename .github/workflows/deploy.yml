name: Deploy to VPS


on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_DEPLOY_KEY }}

      # - name: Deploy to VPS
        # env:
        #     REDIS_HOST: ${{ secrets.REDIS_HOST }}
        #     REDIS_PORT: ${{ secrets.REDIS_PORT }}
        #     REDIS_QUEUE: ${{ secrets.REDIS_QUEUE }}
        #     REDIS_DATA_COUNTER_KEY: ${{ secrets.REDIS_DATA_COUNTER_KEY }}
        #     REDIS_RESPONSE_CHANNEL: ${{ secrets.REDIS_RESPONSE_CHANNEL }}
        #     DEVELOPMENT: ${{ secrets.DEVELOPMENT }}
        #     SECRET_KEY: ${{ secrets.SECRET_KEY }}
        #     DATABASE_PATH: ${{ secrets.DATABASE_PATH }}
        #     GF_SECURITY_ADMIN_USER: ${{ secrets.GF_SECURITY_ADMIN_USER }}
        #     GF_SECURITY_ADMIN_PASSWORD: ${{ secrets.GF_SECURITY_ADMIN_PASSWORD }}
        #     BIND_ADDR: ${{ secrets.BIND_ADDR }}

        # run: |
        #   ssh -o StrictHostKeyChecking=no b5050d@${{ secrets.DEPLOY_IP }} "
        #     cd /home/b5050d/stl_generation &&
        #     git pull &&
        #     docker-compose up -d --build
        #   "

      - name: Deploy to VPS
        env:
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          REDIS_QUEUE: ${{ secrets.REDIS_QUEUE }}
          REDIS_DATA_COUNTER_KEY: ${{ secrets.REDIS_DATA_COUNTER_KEY }}
          REDIS_RESPONSE_CHANNEL: ${{ secrets.REDIS_RESPONSE_CHANNEL }}
          DEVELOPMENT: ${{ secrets.DEVELOPMENT }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DATABASE_PATH: ${{ secrets.DATABASE_PATH }}
          GF_SECURITY_ADMIN_USER: ${{ secrets.GF_SECURITY_ADMIN_USER }}
          GF_SECURITY_ADMIN_PASSWORD: ${{ secrets.GF_SECURITY_ADMIN_PASSWORD }}
          BIND_ADDR: ${{ secrets.BIND_ADDR }}
        run: |
          ssh -o StrictHostKeyChecking=no b5050d@${{ secrets.DEPLOY_IP }} 'bash -s' <<EOF
          cd /home/b5050d/stl_generation

          # Write .env file
          cat > .env <<EOT
          REDIS_HOST=${REDIS_HOST}
          REDIS_PORT=${REDIS_PORT}
          REDIS_QUEUE=${REDIS_QUEUE}
          REDIS_DATA_COUNTER_KEY=${REDIS_DATA_COUNTER_KEY}
          REDIS_RESPONSE_CHANNEL=${REDIS_RESPONSE_CHANNEL}
          DEVELOPMENT=${DEVELOPMENT}
          SECRET_KEY=${SECRET_KEY}
          DATABASE_PATH=${DATABASE_PATH}
          GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
          GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
          BIND_ADDR=${BIND_ADDR}
          EOT

          git pull &&
          docker-compose up -d --build &&
          rm .env
          EOF


